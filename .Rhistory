library(httr)
library(htmltools)
library(jsonlite)
library(httr2)
# Set your API key here
apiKEY <- "qahpNTaorzIpipE811saqizRTQETErYdWHzovqUv"
# API info
apiUrlBase <- "https://api.epa.gov/easey"
# Set your API key here
apiKEY <- "qahpNTaorzIpipE811saqizRTQETErYdWHzovqUv"
?strftime
# change this to the date you want to start downloading files from
# all files after this date and time will be downloaded
timeOfLastRun <- strftime(paste0((Sys.Date()-30),"T00:00:00"), "%Y-%m-%dT%H:%M:%S")
# API base url
apiUrlBase <- "https://api.epa.gov/easey"
# S3 bucket url base + s3Path (in get request) = the full path to the files
bucketUrlBase <- 'https://api.epa.gov/easey/bulk-files/'
# CAMD Administrative Services API url to bulk data files endpoint
servicesUrl <- paste0(apiUrlBase,"/camd-services/bulk-files?API_KEY=",apiKEY)
# executing get request
res = GET(servicesUrl)
# printing the response error message if the response is not successful
if (res$status_code > 399){
errorFrame <- fromJSON(rawToChar(res$content))
stop(paste("Error Code:",errorFrame$error$code,errorFrame$error$message))
}
# converting the content from json format to a data frame
bulkFiles <- fromJSON(rawToChar(res$content))
# print out unique data sub types in the bulk data files
print(unique(bulkFiles$metadata$dataType))
bulkFiles
bulkFiles %>% colnamesa
bulkFiles %>% colnames
bulkFiles %>% summary
library(tidyr)
library(tidyverse)
library(readxl)
library(magrittr)
bulkFiles %>% slice_head()
bulkFiles %>% filter(metadata.year == 2024)
bulkFiles %>% unnest(metadata) %>% filter(year == 2024)
bulkFiles %>% unnest(metadata) %>% filter(year == 2024) %>% view
bulkFiles_filtered <- bulkFiles %>%
unnest(metadata) %>%
filter(year == 2024)
bulkFiles_filtered %>% unique(dataType)
bulkFiles_filtered %$% unique(dataType)
View(bulkFiles_filtered)
#| label: libraries
library(tidyverse)
library(here)
library(httr2)
library(tidyverse)
library(readxl)
library(magrittr)
CAMPD_UrlBase <- "https://api.epa.gov/easey"
#| label: CAMPD-urlbase
CAPD_urlbase <- "https://api.epa.gov/easey"
#| label: CAMPD-urlbase
CAMPD_urlbase <- "https://api.epa.gov/easey"
CAMPD_urlbulk <- "/camd-services/bulk-files?API_KEY="
file.edit("~/.Renviron")
CAMPD_url <- str_c(CAMPD_UrlBase, CAMPD_urlbulk, Sys.getenv("API_KEY"))
#| label: CAMPD-urlbase
CAMPD_urlbase <- "https://api.epa.gov/easey"
CAMPD_urlbulk <- "/camd-services/bulk-files?API_KEY="
CAMPD_url <- str_c(CAMPD_urlbase, CAMPD_urlbulk, Sys.getenv("API_KEY"))
CAMPD_url
Sys.getenv("API_KEY")
Sys.getenv("EIA_KEY")
#| label: CAMPD-urlbase
CAMPD_urlbase <- "https://api.epa.gov/easey"
CAMPD_urlbulk <- "/camd-services/bulk-files?API_KEY="
#| label: CAMPD-urlbase
urlbase_CAMPD <- "https://api.epa.gov/easey"
urlbulk_CAMPD <- "/camd-services/bulk-files?API_KEY="
#| label: CAMPD-req
req_CAMPD <- request(str_c(urlbase_CAMPD,
urlbulk_CAMPD,
Sys.getenv("API_KEY")
)
)
#| label: libraries
library(tidyverse)
library(here)
library(httr2)
library(tidyverse)
library(readxl)
library(magrittr)
#| label: CAMPD-req
req_CAMPD <- request(str_c(urlbase_CAMPD,
urlbulk_CAMPD,
Sys.getenv("API_KEY")
)
)
req_CAMPD
api_key <- Sys.getenv("API_KEY")
req_CAMPD %>% req_dry_run()
resp <- req_CAMPD %>% req_perform()
resp
resp %>% resp_raw()
?resp_raw
resp %>% resp_headers()
resp %>% resp_body_json() %>% str()
?str
test <- resp %>% resp_body_json()
test
test[1]
test[[1]]
test[[1]]$filename
test[1]
test[2]
test[[1]]
test[[1]]$filename
test <- resp %>% resp_body_json(simplifyVector = T)
test$filename
typeof(test)
CAMPD_file_list <- resp %>%
resp_body_json(simplifyVector = T) %>%
as_tibble()
CAMPD_file_list
CAMPD_file_list %>% slice_head(5) %>% view
CAMPD_file_list %>% slice_head(n = 5) %>% view
CAMPD_file_list <- resp %>%
resp_body_json(simplifyVector = T) %>%
as_tibble() %>%
unnest(metadata)
CAMPD_file_list %>% slice_head(n = 5) %>% view
tb_CAMPD_file_list <- resp_CAMPD %>%
resp_body_json(simplifyVector = T) %>%
as_tibble() %>%
unnest(metadata)
resp_CAMPD <- req_CAMPD %>% req_perform()
tb_CAMPD_file_list <- resp_CAMPD %>%
resp_body_json(simplifyVector = T) %>%
as_tibble() %>%
unnest(metadata)
tb_CAMPD_files <- resp_CAMPD %>%
resp_body_json(simplifyVector = T) %>%
as_tibble() %>%
unnest(metadata)
tb_CAMPD_files$dataType %>% unique
tb_CAMPD_files %>% colnames
#| label: libraries
library(tidyverse)
library(here)
library(httr2)
library(tidyverse)
library(readxl)
library(magrittr)
tb_CAMPD_files %>% colnames
#| label: CAMPD-files-summary
tb_CAMPD_files_summary <- tb_CAMPD_files %>%
group_by(dataType, dataSubType) %>%
summarize(n_file = n())
View(tb_CAMPD_files_summary)
tb_CAMPD_files %>% summary
tb_CAMPD_files <- resp_CAMPD %>%
resp_body_json(simplifyVector = T) %>%
as_tibble() %>%
unnest(metadata) %>%
mutate(across(c(year, quarter, bytes), as.numeric),
lastUpdated = as_datetime(lastUpdated)
)
tb_CAMPD_files %>% slice_head(n=5) %>% view()
?as_datetime
tb_CAMPD_files <- resp_CAMPD %>%
resp_body_json(simplifyVector = T) %>%
as_tibble() %>%
unnest(metadata) %>%
mutate(across(c(year, quarter, bytes), as.numeric),
lastUpdated = as_date(lastUpdated)
)
tb_CAMPD_files %>% summary()
#| label: CAMPD-files-summary
tb_CAMPD_files_summary <- tb_CAMPD_files %>%
group_by(dataType, dataSubType) %>%
summarize(n_file = n())
#| label: something
tb_CAMPD_files %>%
filter(dataType == "XML") %>%
filter(dataSubType == "Emissions") %>%
filter(year == 2023) %>%
view("filtered_CAMPD")
#| label: something
tb_CAMPD_files %>%
filter(dataType == "XML") %>%
filter(dataSubType == "Emissions") %>%
filter(year == 2023) %>%
arrange(state, filename, quarter) %>%
view("filtered_CAMPD")
#| label: something
tb_CAMPD_files %>%
filter(dataType == "XML") %>%
filter(dataSubType == "Emissions") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
tb_CAMPD_files %>%
filter(dataType == "Emissions") %>%
filter(dataSubType == "Hourly") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
#| label: something
tb_CAMPD_files %>%
filter(dataType == "XML") %>%
filter(dataSubType == "Emissions") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
tb_CAMPD_files %>%
filter(dataType == "Emissions") %>%
filter(dataSubType == "Hourly") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
n_distinct(tb_CAMPD_files_summary$dataSubType)
n_distinct(tb_CAMPD_files_summary$dataType)
distinct(tb_CAMPD_files_summary$dataType
)
unique(tb_CAMPD_files_summary$dataType)
tb_CAMPD_files %>%
filter(dataType == "Allowance") %>%
# filter(dataSubType == "Hourly") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
tb_CAMPD_files %>%
filter(dataType == "Allowance") %>%
# filter(dataSubType == "Hourly") %>%
# filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
?kntir
?knitr
?kable
library(knitr)
tb_CAMPD_files %>%
filter(dataType == "EDR") %>%
# filter(dataSubType == "Hourly") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
tb_CAMPD_files %>%
filter(dataType == "EDR") %>%
# filter(dataSubType == "Hourly") %>%
# filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
slice_head(n = 20) %>%
view("filtered_CAMPD")
tb_CAMPD_files %>%
filter(dataType == "Emissions") %>%
filter(dataSubType == "Hourly") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
tb_CAMPD_files %>%
filter(dataType == "Facility") %>%
# filter(dataSubType == "Hourly") %>%
# filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
#| label: something
tb_CAMPD_files %>%
filter(dataType == "XML") %>%
filter(dataSubType == "Emissions") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
#| label: libraries
library(tidyverse)
library(here)
library(httr2)
library(tidyverse)
library(readxl)
library(magrittr)
library(knitr)
#| label: something
tb_CAMPD_files %>%
filter(dataType == "XML") %>%
filter(dataSubType == "Emissions") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
tb_CAMPD_files %>%
filter(dataType == "Emissions") %>%
filter(dataSubType == "Hourly") %>%
filter(year == 2023) %>%
arrange(stateCode, filename, quarter) %>%
view("filtered_CAMPD")
gc()
#| label: read-csv
file_filter <- c(
dataType = "Emissions",
year = "2023",
stateCode = "NC",
# quarter = NA_character_,
dataSubType = "Hourly"
)
file_filter$dataType
#| label: read-csv
file_filter <- tibble(
dataType = "Emissions",
year = "2023",
stateCode = "NC",
# quarter = NA_character_,
dataSubType = "Hourly"
)
#| label: read-csv
tb_file_filter <- tibble(
dataType = "Emissions",
year = "2023",
stateCode = "NC",
# quarter = NA_character_,
dataSubType = "Hourly"
)
tb_file_filter$dataType
?pluck
file_NC <- tb_CAMPD_files %>%
filter(dataType == file_filter$dataType) %>%
filter(year == file_filter$year) %>%
filter(stateCode == file_filter$stateCode) %>%
filter(dataSubType == file_filter$dataSubType) %>%
pluck(s3Path)
file_NC <- tb_CAMPD_files %>%
filter(dataType == tb_file_filter$dataType) %>%
filter(year == tb_file_filter$year) %>%
filter(stateCode == tb_file_filter$stateCode) %>%
filter(dataSubType == tb_file_filter$dataSubType) %>%
pluck(s3Path)
file_NC <- tb_CAMPD_files %>%
filter(dataType == tb_file_filter$dataType) %>%
filter(year == tb_file_filter$year) %>%
filter(stateCode == tb_file_filter$stateCode) %>%
filter(dataSubType == tb_file_filter$dataSubType) %$%
pluck(s3Path)
file_NC
file_path_NC <- tb_CAMPD_files %>%
filter(dataType == tb_file_filter$dataType) %>%
filter(year == tb_file_filter$year) %>%
filter(stateCode == tb_file_filter$stateCode) %>%
filter(dataSubType == tb_file_filter$dataSubType) %$%
pluck(s3Path)
#| label: CAMPD-urlbase
urlbase_CAMPD <- "https://api.epa.gov/easey/"
urlbulk_CAMPD <- "camd-services/bulk-files?API_KEY="
req_CAMPD_hourly_NC_2023 <- request(
str_c(urlbase_CAMPD,
"bulk-files/",
file_path_NC
)
)
req_CAMPD %>% req_dry_run()
req_CAMPD %>% req_CAMPD_hourly_NC_2023()
req_CAMPD_hourly_NC_2023 %>% req_dry_run()
urlbase_CAMPD
resp_CAMPD_hourly_NC_2023 <- req_CAMPD %>% req_perform()
resp_CAMPD_hourly_NC_2023
resp_CAMPD_hourly_NC_2023 <- req_CAMPD_hourly_NC_2023 %>% req_perform()
resp_CAMPD_hourly_NC_2023
tb_CAMPD_hourly_NC_2023 <- resp_CAMPD_hourly_NC_2023 %>%
resp_body_json(simplifyVector = T) %#>%
as_tibble() %>%
unnest(metadata) %>%
mutate(across(c(year, quarter, bytes), as.numeric),
lastUpdated = as_date(lastUpdated)
)
tb_CAMPD_hourly_NC_2023 <- resp_CAMPD_hourly_NC_2023 %>%
resp_body_json(simplifyVector = T) #%>%
tb_path_CAMPD_hourly_NC_2023 <- tb_CAMPD_files %>%
filter(dataType == tb_file_filter$dataType) %>%
filter(year == tb_file_filter$year) %>%
filter(stateCode == tb_file_filter$stateCode) %>%
filter(dataSubType == tb_file_filter$dataSubType)
req_CAMPD_hourly_NC_2023 <- request(
str_c(urlbase_CAMPD,
"bulk-files/",
tb_path_CAMPD_hourly_NC_2023$s3Path
)
)
filename
resp_CAMPD_hourly_NC_2023 <- req_CAMPD_hourly_NC_2023 %>%
req_perform(path = here(str_c("output/",
tb_path_CAMPD_hourly_NC_2023$filename)
)
)
resp_CAMPD_hourly_NC_2023
test <- read_csv(str_c(urlbase_CAMPD,
"bulk-files/",
tb_path_CAMPD_hourly_NC_2023$s3Path
))
test
tb_path_CAMPD_hourly_NC_2023 <- tb_CAMPD_files %>%
filter(dataType == tb_file_filter$dataType) %>%
filter(year == tb_file_filter$year) %>%
filter(stateCode == tb_file_filter$stateCode) %>%
filter(dataSubType == tb_file_filter$dataSubType)
tb_CAMPD_hourly_NC_2023 <-
read_csv(str_c(
urlbase_CAMPD,
"bulk-files/",
tb_path_CAMPD_hourly_NC_2023$s3Path
))
tb_CAMPD_hourly_NC_2023
tb_CAMPD_hourly_NC_2023 %>% summary
tb_CAMPD_hourly_NC_2023 %>% str()
#| label: libraries
library(tidyverse)
library(here)
library(httr2)
library(tidyverse)
library(readxl)
library(magrittr)
library(knitr)
#| label: download-csv
#| eval: false
req_CAMPD_hourly_NC_2023 <- request(
str_c(urlbase_CAMPD,
"bulk-files/",
tb_path_CAMPD_hourly_NC_2023$s3Path
)
)
resp_CAMPD_hourly_NC_2023 <- req_CAMPD_hourly_NC_2023 %>%
req_perform(path = here(str_c("data/",
tb_path_CAMPD_hourly_NC_2023$filename
)
)
)
?read_csv
ls_col_headers <-
read_csv(
str_c(urlbase_CAMPD, "bulk-files/",
tb_path_CAMPD_hourly_NC_2023$s3Path
),
n_max = 1
) %>%
colnames()
ls_col_headers
kable(ls_col_headers)
?kable
#| label: tbl-read-headers
#| cache: true
ls_col_headers
?kable
ls_col_headers[1:16]
ls_col_headers[1:n(.)]
ls_col_headers %>% [1:2]
ls_col_headers %>% pluck(1)
ls_col_headers %>% pluck(1:n(.)/2)
ls_col_headers %$% pluck(1:n(.)/2)
ls_col_headers[1:n(ls_col_headers)/2
ls_col_headers[1:n(ls_col_headers)/2]
ls_col_headers %>% pluck(1:length(.)/2)
ls_col_headers %>% length(.)
ls_col_headers %>% pluck(1:(length(.)/2))
ls_col_headers %>% pluck(1:16
ls_col_headers %>% pluck(1:16)
ls_col_headers[1:n(ls_col_headers)/2]
ls_col_headers[1:length(ls_col_headers)/2]
length_headers <- length(ls_col_headers)
ls_col_headers[1:floor(length_headers/2)]
kable(tibble(headers1 = ls_col_headers[1:floor(length_headers/2)],
headers2 = ls_col_headers[(floor(length_headers/2)] + 1):length_headers)
kable(tibble(headers1 = ls_col_headers[1:floor(length_headers/2)],
headers2 = ls_col_headers[(floor(length_headers/2) + 1):length_headers)]
kable(tibble(headers1 = ls_col_headers[1:floor(length_headers/2)],
headers2 = ls_col_headers[(floor(length_headers/2) + 1):length_headers])
)
kable(
tibble(
headers1 = ls_col_headers[1:floor(length_headers/2)],
headers2 = ls_col_headers[(floor(length_headers/2) + 1):length_headers])
)
ls_col_names <- c("State", "Facility Name", "Facility ID", "Unit ID",
"Date", "Hour", "Operating Time", "NOx Rate (lbs/mmBtu)")
tb_CAMPD_hourly_NC_2023 <-
read_csv(
str_c(urlbase_CAMPD, "bulk-files/", tb_path_CAMPD_hourly_NC_2023$s3Path),
col_names = ls_col_names
)
tb_CAMPD_hourly_NC_2023
tb_CAMPD_hourly_NC_2023 %>% colnames
?read_csv
tb_CAMPD_hourly_NC_2023 <-
read_csv(
str_c(urlbase_CAMPD, "bulk-files/", tb_path_CAMPD_hourly_NC_2023$s3Path),
col_select = ls_col_names
)
tb_CAMPD_hourly_NC_2023
tb_CAMPD_hourly_NC_2023 <-
read_csv(
"data/emissions-hourly-2023-nc.csv",
col_select = all_of(ls_col_names)
)
#| label: libraries
library(tidyverse)
library(here)
library(httr2)
library(tidyverse)
library(readxl)
library(magrittr)
library(knitr)
